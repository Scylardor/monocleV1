- raw input:


https://gamedev.stackexchange.com/questions/72114/how-do-i-handle-directx-mouse-events
https://gamedev.stackexchange.com/questions/1859/handling-keyboard-and-mouse-input-win-api

https://docs.microsoft.com/fr-fr/windows/desktop/inputdev/using-raw-input
https://docs.microsoft.com/fr-fr/windows/desktop/inputdev/wm-input
https://docs.microsoft.com/fr-fr/windows/desktop/DxTechArts/taking-advantage-of-high-dpi-mouse-movement
https://docs.microsoft.com/en-us/windows/desktop/api/winuser/nf-winuser-registerrawinputdevices
https://docs.microsoft.com/fr-fr/windows/desktop/inputdev/wm-input-device-change
https://docs.microsoft.com/en-us/dotnet/framework/winforms/how-keyboard-input-works
https://docs.microsoft.com/en-us/windows/desktop/inputdev/virtual-key-codes
https://docs.microsoft.com/fr-fr/windows-hardware/drivers/hid/top-level-collections-opened-by-windows-for-system-use

https://stackoverflow.com/questions/17496703/interpretation-of-raw-mouse-input
https://stackoverflow.com/questions/10462198/raw-mouse-input-with-windows
https://stackoverflow.com/questions/8161741/handling-keyboard-input-in-win32-wm-char-or-wm-keydown-wm-keyup
https://stackoverflow.com/questions/5681284/how-do-i-distinguish-between-left-and-right-keys-ctrl-and-alt
https://stackoverflow.com/questions/5313743/winapi-unregister-rawinputdevice
https://stackoverflow.com/questions/6881114/too-many-raw-input-device-from-getrawinputdevicelist/10331763
https://stackoverflow.com/questions/8161741/handling-keyboard-input-in-win32-wm-char-or-wm-keydown-wm-keyup

http://asawicki.info/news_1533_handling_multiple_mice_with_raw_input.html
http://keithditch.powweb.com/Games/html/raw_input.html



https://hackaday.io/project/5364-cheap-windows-jogkeyboard-controller-for-cncs/log/16843-looking-at-rawinput-for-more-detail


https://blog.molecular-matters.com/2011/09/05/properly-handling-keyboard-input/

https://www.gamedev.net/forums/topic/666409-winapi-raw-input-and-mouse-acceleration/
https://www.gamedev.net/forums/topic/308083-using-wm_input/

https://www.codeproject.com/Articles/17123/Using-Raw-Input-from-C-to-handle-multiple-keyboard
https://www.codeproject.com/articles/14500/detecting-hardware-insertion-and-or-removal

https://gist.github.com/javiercantero/7753445
https://www.linuxquestions.org/questions/linux-general-1/reading-and-writing-to-the-linux-keyboard-buffer-4175416506/
http://math.msu.su/%7Evvb/2course/Borisenko/CppProjects/GWindow/xintro.html#input
https://rosettacode.org/wiki/Simulate_input/Keyboard#C
https://stackoverflow.com/questions/37321038/x11-detect-general-mouse-and-keyboard-events
https://keithp.com/blogs/Cursor_tracking/
http://math.msu.su/%7Evvb/2course/Borisenko/CppProjects/GWindow/xintro.html
https://tronche.com/gui/x/
https://stackoverflow.com/questions/9064362/getting-device-input-mouse-keyboard-on-linux
https://www.win.tue.nl/~aeb/linux/kbd/scancodes-1.html


- XInput:
https://katyscode.wordpress.com/2013/08/30/xinput-tutorial-part-1-adding-gamepad-support-to-your-windows-game/
https://lcmccauley.wordpress.com/2014/01/05/gamepad-input-tutorial/
https://www.codeproject.com/Articles/26949/Xbox-360-Controller-Input-in-C-with-XInput
https://docs.microsoft.com/en-us/windows/desktop/xinput/getting-started-with-xinput

- game engine docs:
https://gamasutra.com/blogs/MichaelKissner/20151027/257369/Writing_a_Game_Engine_from_Scratch__Part_1_Messaging.php
EASTL http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2271.html


- linux projects inside visual studio:
https://www.hanselman.com/blog/WritingAndDebuggingLinuxCApplicationsFromVisualStudioUsingTheWindowsSubsystemForLinux.aspx
https://devblogs.microsoft.com/cppblog/targeting-windows-subsystem-for-linux-from-visual-studio/
https://devblogs.microsoft.com/cppblog/visual-c-for-linux-development-with-cmake/
https://visualgdb.com/tutorials/linux/
https://docs.microsoft.com/en-us/cpp/build/get-started-linux-cmake?view=vs-2017 
https://docs.microsoft.com/en-us/cpp/linux/cmake-linux-project?view=vs-2019

- random engine :
https://isocpp.org/files/papers/n3551.pdf

- vector/std performance investigations:
https://github.com/lnishan/vector
https://baptiste-wicht.com/posts/2012/12/cpp-benchmark-vector-list-deque.html

- D3D11 Debug Interface:
https://seanmiddleditch.com/direct3d-11-debug-api-tricks/

- unique ptr with allocators:
https://www.reddit.com/r/cpp/comments/5z6di9/what_about_allocator_support_for_stdunique_ptr/


- automatic hashing:
https://blog.molecular-matters.com/2011/06/24/hashed-strings/
https://blogs.msdn.microsoft.com/vcblog/2018/10/19/exploring-clang-tooling-part-1-extending-clang-tidy/
https://stackoverflow.com/questions/28675727/using-crc32-algorithm-to-hash-string-at-compile-time

- memory allocation:
https://bitsquid.blogspot.com/2010/09/custom-memory-allocation-in-c.html
https://www.gamedev.net/articles/programming/general-and-gameplay-programming/c-custom-memory-allocation-r3010/
https://www.gamedev.net/forums/topic/585787-design-of-a-memory-allocator-for-game-engine/
https://blog.molecular-matters.com/2012/08/14/memory-allocation-strategies-a-linear-allocator/
https://blog.molecular-matters.com/2011/07/05/memory-system-part-1/
https://blog.molecular-matters.com/2011/08/03/memory-system-part-5/


- time step:
https://bitsquid.blogspot.com/2010/10/time-step-smoothing.html


- unit tests:
- enums
- input handler
- keyboard mappings
- moeError

- build step : generate keyboards mappings using the python script

- create macro MOE_CRTP